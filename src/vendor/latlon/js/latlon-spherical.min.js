/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - - -  */
/*  Latitude/longitude spherical geodesy formulae & scripts           (c) Chris Veness 2002-2015  */
/*   - www.movable-type.co.uk/scripts/latlong.html              MIT Licence  */
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - -  */
"use strict";function LatLon(a,b){return this instanceof LatLon?(this.lat=Number(a),void(this.lon=Number(b))):new LatLon(a,b)}if("undefined"!=typeof module&&module.exports)var Dms=require("./dms");LatLon.prototype.distanceTo=function(a,b){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");b=void 0===b?6371e3:Number(b);var c=b,d=this.lat.toRadians(),e=this.lon.toRadians(),f=a.lat.toRadians(),g=a.lon.toRadians(),h=f-d,i=g-e,j=Math.sin(h/2)*Math.sin(h/2)+Math.cos(d)*Math.cos(f)*Math.sin(i/2)*Math.sin(i/2),k=2*Math.atan2(Math.sqrt(j),Math.sqrt(1-j)),l=c*k;return l},LatLon.prototype.bearingTo=function(a){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");var b=this.lat.toRadians(),c=a.lat.toRadians(),d=(a.lon-this.lon).toRadians(),e=Math.sin(d)*Math.cos(c),f=Math.cos(b)*Math.sin(c)-Math.sin(b)*Math.cos(c)*Math.cos(d),g=Math.atan2(e,f);return(g.toDegrees()+360)%360},LatLon.prototype.finalBearingTo=function(a){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");return(a.bearingTo(this)+180)%360},LatLon.prototype.midpointTo=function(a){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");var b=this.lat.toRadians(),c=this.lon.toRadians(),d=a.lat.toRadians(),e=(a.lon-this.lon).toRadians(),f=Math.cos(d)*Math.cos(e),g=Math.cos(d)*Math.sin(e),h=Math.atan2(Math.sin(b)+Math.sin(d),Math.sqrt((Math.cos(b)+f)*(Math.cos(b)+f)+g*g)),i=c+Math.atan2(g,Math.cos(b)+f);return i=(i+3*Math.PI)%(2*Math.PI)-Math.PI,new LatLon(h.toDegrees(),i.toDegrees())},LatLon.prototype.destinationPoint=function(a,b,c){c=void 0===c?6371e3:Number(c);var d=Number(a)/c,e=Number(b).toRadians(),f=this.lat.toRadians(),g=this.lon.toRadians(),h=Math.asin(Math.sin(f)*Math.cos(d)+Math.cos(f)*Math.sin(d)*Math.cos(e)),i=g+Math.atan2(Math.sin(e)*Math.sin(d)*Math.cos(f),Math.cos(d)-Math.sin(f)*Math.sin(h));return i=(i+3*Math.PI)%(2*Math.PI)-Math.PI,new LatLon(h.toDegrees(),i.toDegrees())},LatLon.intersection=function(a,b,c,d){if(!(a instanceof LatLon))throw new TypeError("p1 is not LatLon object");if(!(c instanceof LatLon))throw new TypeError("p2 is not LatLon object");var e=a.lat.toRadians(),f=a.lon.toRadians(),g=c.lat.toRadians(),h=c.lon.toRadians(),i=Number(b).toRadians(),j=Number(d).toRadians(),k=g-e,l=h-f,m=2*Math.asin(Math.sqrt(Math.sin(k/2)*Math.sin(k/2)+Math.cos(e)*Math.cos(g)*Math.sin(l/2)*Math.sin(l/2)));if(0==m)return null;var n=Math.acos((Math.sin(g)-Math.sin(e)*Math.cos(m))/(Math.sin(m)*Math.cos(e)));isNaN(n)&&(n=0);var o,p,q=Math.acos((Math.sin(e)-Math.sin(g)*Math.cos(m))/(Math.sin(m)*Math.cos(g)));Math.sin(h-f)>0?(o=n,p=2*Math.PI-q):(o=2*Math.PI-n,p=q);var r=(i-o+Math.PI)%(2*Math.PI)-Math.PI,s=(p-j+Math.PI)%(2*Math.PI)-Math.PI;if(0==Math.sin(r)&&0==Math.sin(s))return null;if(Math.sin(r)*Math.sin(s)<0)return null;var t=Math.acos(-Math.cos(r)*Math.cos(s)+Math.sin(r)*Math.sin(s)*Math.cos(m)),u=Math.atan2(Math.sin(m)*Math.sin(r)*Math.sin(s),Math.cos(s)+Math.cos(r)*Math.cos(t)),v=Math.asin(Math.sin(e)*Math.cos(u)+Math.cos(e)*Math.sin(u)*Math.cos(i)),w=Math.atan2(Math.sin(i)*Math.sin(u)*Math.cos(e),Math.cos(u)-Math.sin(e)*Math.sin(v)),x=f+w;return x=(x+3*Math.PI)%(2*Math.PI)-Math.PI,new LatLon(v.toDegrees(),x.toDegrees())},LatLon.prototype.crossTrackDistanceTo=function(a,b,c){if(!(a instanceof LatLon))throw new TypeError("pathStart is not LatLon object");if(!(b instanceof LatLon))throw new TypeError("pathEnd is not LatLon object");c=void 0===c?6371e3:Number(c);var d=a.distanceTo(this,c)/c,e=a.bearingTo(this).toRadians(),f=a.bearingTo(b).toRadians(),g=Math.asin(Math.sin(d)*Math.sin(e-f))*c;return g},LatLon.prototype.rhumbDistanceTo=function(a,b){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");b=void 0===b?6371e3:Number(b);var c=b,d=this.lat.toRadians(),e=a.lat.toRadians(),f=e-d,g=Math.abs(a.lon-this.lon).toRadians();Math.abs(g)>Math.PI&&(g=g>0?-(2*Math.PI-g):2*Math.PI+g);var h=Math.log(Math.tan(e/2+Math.PI/4)/Math.tan(d/2+Math.PI/4)),i=Math.abs(h)>1e-11?f/h:Math.cos(d),j=Math.sqrt(f*f+i*i*g*g),k=j*c;return k},LatLon.prototype.rhumbBearingTo=function(a){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");var b=this.lat.toRadians(),c=a.lat.toRadians(),d=(a.lon-this.lon).toRadians();Math.abs(d)>Math.PI&&(d=d>0?-(2*Math.PI-d):2*Math.PI+d);var e=Math.log(Math.tan(c/2+Math.PI/4)/Math.tan(b/2+Math.PI/4)),f=Math.atan2(d,e);return(f.toDegrees()+360)%360},LatLon.prototype.rhumbDestinationPoint=function(a,b,c){c=void 0===c?6371e3:Number(c);var d=Number(a)/c,e=this.lat.toRadians(),f=this.lon.toRadians(),g=Number(b).toRadians(),h=d*Math.cos(g),i=e+h;Math.abs(i)>Math.PI/2&&(i=i>0?Math.PI-i:-Math.PI-i);var j=Math.log(Math.tan(i/2+Math.PI/4)/Math.tan(e/2+Math.PI/4)),k=Math.abs(j)>1e-11?h/j:Math.cos(e),l=d*Math.sin(g)/k,m=f+l;return m=(m+3*Math.PI)%(2*Math.PI)-Math.PI,new LatLon(i.toDegrees(),m.toDegrees())},LatLon.prototype.rhumbMidpointTo=function(a){if(!(a instanceof LatLon))throw new TypeError("point is not LatLon object");var b=this.lat.toRadians(),c=this.lon.toRadians(),d=a.lat.toRadians(),e=a.lon.toRadians();Math.abs(e-c)>Math.PI&&(c+=2*Math.PI);var f=(b+d)/2,g=Math.tan(Math.PI/4+b/2),h=Math.tan(Math.PI/4+d/2),i=Math.tan(Math.PI/4+f/2),j=((e-c)*Math.log(i)+c*Math.log(h)-e*Math.log(g))/Math.log(h/g);return isFinite(j)||(j=(c+e)/2),j=(j+3*Math.PI)%(2*Math.PI)-Math.PI,new LatLon(f.toDegrees(),j.toDegrees())},LatLon.prototype.toString=function(a,b){return void 0===a&&(a="dms"),Dms.toLat(this.lat,a,b)+", "+Dms.toLon(this.lon,a,b)},void 0===Number.prototype.toRadians&&(Number.prototype.toRadians=function(){return this*Math.PI/180}),void 0===Number.prototype.toDegrees&&(Number.prototype.toDegrees=function(){return 180*this/Math.PI}),"undefined"!=typeof module&&module.exports&&(module.exports=LatLon);